@page
@model IndexModel

@section Styles {
    <partial name="_DataTableStyles" />
}
@{
    ViewData["Title"] = Localizer["Remarks List"];
    ViewData["ActiveMainPage"] = "Remarks";
    ViewData["Level1"] = "IDMSMasterfile";
    var toolBarModel = new ESG.IDMS.Web.Models.ListingToolbarModel(Localizer["Remarks List"].Value);
    if ((await AuthorizationService.AuthorizeAsync(User, Permission.Remarks.Create)).Succeeded)
    {
        toolBarModel.Buttons.Add(new ESG.IDMS.Web.Models.Button("/Remarks/Add", "IDMS", ESG.IDMS.Web.Models.ButtonType.Add, 1));
    }
    if ((await AuthorizationService.AuthorizeAsync(User, Permission.Remarks.Upload)).Succeeded)
    {
        toolBarModel.Buttons.Add(new ESG.IDMS.Web.Models.Button(ESG.IDMS.Web.Models.ButtonType.DownloadTemplate, 2));
    }
    if ((await AuthorizationService.AuthorizeAsync(User, Permission.Remarks.Upload)).Succeeded)
    {
        toolBarModel.Buttons.Add(new ESG.IDMS.Web.Models.Button(ESG.IDMS.Web.Models.ButtonType.Upload, 3));
    } 
}
<partial name="_ListingsToolbarPartial" model=@(toolBarModel) />
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <table id="remarks" class="table table-hover table-bordered table-striped responsive nowrap fills-table" width="100%">
                    <thead>
                        <tr>
                            <th>
								@Localizer["Description"]
							</th>
							  
							
                            <th>
                                @Localizer["Actions"]
                            </th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<a id="back-to-top" href="#" class="btn btn-primary back-to-top" role="button" aria-label="Scroll to top">
    <i class="fas fa-chevron-up"></i>
</a>
<div id="BatchUploadPartialContainer">
    <partial name="_BatchUpload" model="Model.BatchUpload" />
</div>
@section Scripts {
    <partial name="_DataTableScripts" />
    <script asp-add-nonce>
        $(document).ready(function () {
            var table = $('#remarks').DataTable({
                select: false,
                serverSide: true,
                responsive: true,
                order: [[1, 'desc']],
                dom: '@Html.Raw(ESG.IDMS.Web.WebConstants.DataTableDOMLayOut)',
                ajax:
                {
                    url: '@Url.Page("/Remarks/Index", new { area = "IDMS", handler = "ListAll" })',
                    type: "POST",
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                },
                initComplete: function (settings, json) {
                    BindTableRowCollapseEvent();
                },
                columns: [
                    { data: "description", name: "Description", responsivePriority: 1, title: '@Localizer["Description"]', searchable: true, className: "text-start" },
				   
					
                    {
                        data: null,
                        searchable: false,
                        orderable: false,
                        responsivePriority: 1,
                        width: "10%",
                        className: "fills-text-center",
                        render: function (data, type, row, meta) {
                            var url = '@Url.Page("/Remarks/Details", new { area = "IDMS" })' + '?id=' + row.id;
                            var button = '<a href="' + url + '" class="btn btnFills btnInfoIcon btnViewRemarks" title="@Localizer["View"]"></a>';
        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Remarks.Edit)).Succeeded)
        {
            <text>
                                    url = '@Url.Page("/Remarks/Edit", new { area = "IDMS" })' + '?id=' + row.id;
                                button = button + '&nbsp;<a href="' + url + '" class="btn btnFills btnEditIcon btnEditRemarks" title="@Localizer["Edit"]"></a>';
            </text>
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Remarks.Delete)).Succeeded)
        {
            <text>
                                    url = '@Url.Page("/Remarks/Delete", new { area = "IDMS" })' + '?id=' + row.id;
                                button = button + '&nbsp;<a href="' + url + '" class="btn btnFills btnDeleteIcon btnDeleteRemarks" title="@Localizer["Delete"]"></a>';
            </text>
        }
        
        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Remarks.History)).Succeeded)
        {
            <text>
                                    url = '@Url.Page("/Remarks/History", new { area = "IDMS" })' + '?id=' + row.id;
                                button = button + '&nbsp;<a href="' + url + '" class="btn btnFills btnHistoryIcon" title="@Localizer["History"]"></a>';
            </text>
        }
                                                                                                                        return button;
                        },
                    },
                    { data: "lastModifiedDate", name: "LastModifiedDate", title: '@Localizer["Last Modified Date"]', visible: false, searchable: false },
                    { data: "id", name: "Id", visible: false },
                ],
                buttons: [
                    'pageLength',
                ],
            });
            var debounce = new $.fn.dataTable.Debounce(table); // Add delay to search

            $('.btn-table_filter').on('click', function (e) {
                table.ajax.reload(null, false);
            });
            function BindTableRowCollapseEvent() {
                $('#remarks tbody').on('click', 'td.dtr-control', function () {
                    $.showAjaxLoaderOnClick([".btnAddRemarks", ".btnEditRemarks", ".btnViewRemarks", ".btnDeleteRemarks"]);
                });
            }
            $.showAjaxLoaderOnClick([".btnAddRemarks", ".btnEditRemarks", ".btnViewRemarks", ".btnDeleteRemarks"]);
            $.InitializeSearchKeyCookies(table);
            $('#btnBatchUpload').on('change', function (e) {
                $('#batch-upload-form').submit();
            });
            $('#@(ESG.IDMS.Web.Models.ListingToolbarConstants.ButtonPrefix + ESG.IDMS.Web.Models.ButtonType.DownloadTemplate)').on('click', function (e) {
				$('#download-template-form').submit();
			});
			$('#@(ESG.IDMS.Web.Models.ListingToolbarConstants.ButtonPrefix + ESG.IDMS.Web.Models.ButtonType.Upload)').on('click', function (e) {
				$('#btnBatchUpload').click();
			});
        @if (!string.IsNullOrEmpty(Model.BatchUpload.BatchUploadFileName))
        {
            <text>
                    $('#btnDownloadBatchUploadTemplateLink')[0].click();
            </text>
        }
        });
    </script>
}